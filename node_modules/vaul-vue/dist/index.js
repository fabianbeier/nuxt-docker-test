(function(){"use strict";try{if(typeof document<"u"){var r=document.createElement("style");r.appendChild(document.createTextNode('[vaul-drawer]{touch-action:none;will-change:transform;transition:transform .5s cubic-bezier(.32,.72,0,1)}[vaul-drawer][vaul-drawer-direction=bottom]{transform:translate3d(0,100%,0)}[vaul-drawer][vaul-drawer-direction=top]{transform:translate3d(0,-100%,0)}[vaul-drawer][vaul-drawer-direction=left]{transform:translate3d(-100%,0,0)}[vaul-drawer][vaul-drawer-direction=right]{transform:translate3d(100%,0,0)}.vaul-dragging .vaul-scrollable [vault-drawer-direction=top],.vaul-dragging .vaul-scrollable [vault-drawer-direction=bottom]{overflow-y:hidden!important}.vaul-dragging .vaul-scrollable [vault-drawer-direction=left],.vaul-dragging .vaul-scrollable [vault-drawer-direction=right]{overflow-x:hidden!important}[vaul-drawer][vaul-drawer-visible=true][vaul-drawer-direction=top],[vaul-drawer][vaul-drawer-visible=true][vaul-drawer-direction=bottom]{transform:translate3d(0,var(--snap-point-height, 0),0)}[vaul-drawer][vaul-drawer-visible=true][vaul-drawer-direction=left],[vaul-drawer][vaul-drawer-visible=true][vaul-drawer-direction=right]{transform:translate3d(var(--snap-point-height, 0),0,0)}[vaul-overlay]{opacity:0;transition:opacity .5s cubic-bezier(.32,.72,0,1)}[vaul-overlay][vaul-drawer-visible=true]{opacity:1}[vaul-drawer]:after{content:"";position:absolute;background:inherit;background-color:inherit}[vaul-drawer][vaul-drawer-direction=top]:after{top:initial;bottom:100%;left:0;right:0;height:200%}[vaul-drawer][vaul-drawer-direction=bottom]:after{top:100%;bottom:initial;left:0;right:0;height:200%}[vaul-drawer][vaul-drawer-direction=left]:after{left:initial;right:100%;top:0;bottom:0;width:200%}[vaul-drawer][vaul-drawer-direction=right]:after{left:100%;right:initial;top:0;bottom:0;width:200%}[vaul-overlay][vaul-snap-points=true]:not([vaul-snap-points-overlay=true]):not([data-state=closed]){opacity:0}[vaul-overlay][vaul-snap-points-overlay=true]:not([vaul-drawer-visible=false]){opacity:1}@keyframes fake-animation{}@media (hover: hover) and (pointer: fine){[vaul-drawer]{-webkit-user-select:none;user-select:none}}')),document.head.appendChild(r)}}catch(a){console.error("vite-plugin-css-injected-by-js",a)}})();
import { getCurrentInstance as ze, ref as E, watch as Y, nextTick as Oe, computed as W, onMounted as Te, onBeforeUnmount as Ie, onUnmounted as Ee, watchEffect as ke, defineComponent as oe, useSlots as qe, toRefs as Ye, openBlock as ie, createBlock as re, unref as A, withCtx as ce, renderSlot as ve, mergeProps as Xe, normalizeStyle as Ge } from "vue";
import { createContext as Je, DialogRoot as Ke, useForwardPropsEmits as Qe, DialogOverlay as Ze, DialogContent as Fe } from "reka-ui";
import { DialogClose as yt, DialogDescription as $t, DialogPortal as Dt, DialogTitle as St, DialogTrigger as Ot } from "reka-ui";
const et = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
const tt = (t) => typeof t < "u";
function nt(t) {
  return JSON.parse(JSON.stringify(t));
}
function $e(t, n, v, r = {}) {
  var e, b, u;
  const {
    clone: f = !1,
    passive: _ = !1,
    eventName: O,
    deep: T = !1,
    defaultValue: c,
    shouldEmit: i
  } = r, D = ze(), p = v || (D == null ? void 0 : D.emit) || ((e = D == null ? void 0 : D.$emit) == null ? void 0 : e.bind(D)) || ((u = (b = D == null ? void 0 : D.proxy) == null ? void 0 : b.$emit) == null ? void 0 : u.bind(D == null ? void 0 : D.proxy));
  let o = O;
  n || (n = "modelValue"), o = o || `update:${n.toString()}`;
  const U = (l) => f ? typeof f == "function" ? f(l) : nt(l) : l, C = () => tt(t[n]) ? U(t[n]) : c, s = (l) => {
    i ? i(l) && p(o, l) : p(o, l);
  };
  if (_) {
    const l = C(), m = E(l);
    let S = !1;
    return Y(
      () => t[n],
      (y) => {
        S || (S = !0, m.value = U(y), Oe(() => S = !1));
      }
    ), Y(
      m,
      (y) => {
        !S && (y !== t[n] || T) && s(y);
      },
      { deep: T }
    ), m;
  } else
    return W({
      get() {
        return C();
      },
      set(l) {
        s(l);
      }
    });
}
const [de, at] = Je("DrawerRoot"), Re = /* @__PURE__ */ new WeakMap();
function $(t, n, v = !1) {
  if (!t || !(t instanceof HTMLElement) || !n)
    return;
  const r = {};
  Object.entries(n).forEach(([e, b]) => {
    if (e.startsWith("--")) {
      t.style.setProperty(e, b);
      return;
    }
    r[e] = t.style[e], t.style[e] = b;
  }), !v && Re.set(t, r);
}
function ae(t, n) {
  if (!t || !(t instanceof HTMLElement))
    return;
  const v = Re.get(t);
  v && (n ? t.style[n] = v[n] : Object.entries(v).forEach(([r, e]) => {
    t.style[r] = e;
  }));
}
function le(t, n) {
  const v = window.getComputedStyle(t), r = v.transform || v.webkitTransform || v.mozTransform;
  let e = r.match(/^matrix3d\((.+)\)$/);
  return e ? Number.parseFloat(e[1].split(", ")[P(n) ? 13 : 12]) : (e = r.match(/^matrix\((.+)\)$/), e ? Number.parseFloat(e[1].split(", ")[P(n) ? 5 : 4]) : null);
}
function lt(t) {
  return 8 * (Math.log(t + 1) - 2);
}
function P(t) {
  switch (t) {
    case "top":
    case "bottom":
      return !0;
    case "left":
    case "right":
      return !1;
    default:
      return t;
  }
}
const w = {
  DURATION: 0.5,
  EASE: [0.32, 0.72, 0, 1]
}, Pe = 0.4;
function ot({
  activeSnapPoint: t,
  snapPoints: n,
  drawerRef: v,
  overlayRef: r,
  fadeFromIndex: e,
  onSnapPointChange: b,
  direction: u
}) {
  const f = E(typeof window < "u" ? {
    innerWidth: window.innerWidth,
    innerHeight: window.innerHeight
  } : void 0);
  function _() {
    f.value = {
      innerWidth: window.innerWidth,
      innerHeight: window.innerHeight
    };
  }
  Te(() => {
    typeof window < "u" && window.addEventListener("resize", _);
  }), Ie(() => {
    typeof window < "u" && window.removeEventListener("resize", _);
  });
  const O = W(
    () => (n.value && t.value === n.value[n.value.length - 1]) ?? null
  ), T = W(
    () => n.value && n.value.length > 0 && ((e == null ? void 0 : e.value) || (e == null ? void 0 : e.value) === 0) && !Number.isNaN(e == null ? void 0 : e.value) && n.value[(e == null ? void 0 : e.value) ?? -1] === t.value || !n.value
  ), c = W(
    () => {
      var s;
      return ((s = n.value) == null ? void 0 : s.findIndex((l) => l === t.value)) ?? null;
    }
  ), i = W(
    () => {
      var s;
      return ((s = n.value) == null ? void 0 : s.map((l) => {
        const m = typeof l == "string";
        let S = 0;
        if (m && (S = Number.parseInt(l, 10)), P(u.value)) {
          const x = m ? S : f.value ? l * f.value.innerHeight : 0;
          return f.value ? u.value === "bottom" ? f.value.innerHeight - x : -f.value.innerHeight + x : x;
        }
        const y = m ? S : f.value ? l * f.value.innerWidth : 0;
        return f.value ? u.value === "right" ? f.value.innerWidth - y : -f.value.innerWidth + y : y;
      })) ?? [];
    }
  ), D = W(
    () => {
      var s;
      return c.value !== null ? (s = i.value) == null ? void 0 : s[c.value] : null;
    }
  ), p = (s) => {
    var m, S, y, x;
    const l = ((m = i.value) == null ? void 0 : m.findIndex((M) => M === s)) ?? null;
    Oe(() => {
      var M;
      b(l, i.value), $((M = v.value) == null ? void 0 : M.$el, {
        transition: `transform ${w.DURATION}s cubic-bezier(${w.EASE.join(",")})`,
        transform: P(u.value) ? `translate3d(0, ${s}px, 0)` : `translate3d(${s}px, 0, 0)`
      });
    }), i.value && l !== i.value.length - 1 && l !== (e == null ? void 0 : e.value) ? $((S = r.value) == null ? void 0 : S.$el, {
      transition: `opacity ${w.DURATION}s cubic-bezier(${w.EASE.join(",")})`,
      opacity: "0"
    }) : $((y = r.value) == null ? void 0 : y.$el, {
      transition: `opacity ${w.DURATION}s cubic-bezier(${w.EASE.join(",")})`,
      opacity: "1"
    }), t.value = l !== null ? ((x = n.value) == null ? void 0 : x[l]) ?? null : null;
  };
  Y(
    [t, i, n],
    () => {
      var s;
      if (t.value) {
        const l = ((s = n.value) == null ? void 0 : s.findIndex((m) => m === t.value)) ?? -1;
        i.value && l !== -1 && typeof i.value[l] == "number" && p(i.value[l]);
      }
    },
    {
      immediate: !0
      // if you want to run the effect immediately as well
    }
  );
  function o({
    draggedDistance: s,
    closeDrawer: l,
    velocity: m,
    dismissible: S
  }) {
    var z, F, d;
    if (e.value === void 0)
      return;
    const y = u.value === "bottom" || u.value === "right" ? (D.value ?? 0) - s : (D.value ?? 0) + s, x = c.value === e.value - 1, M = c.value === 0, j = s > 0;
    if (x && $((z = r.value) == null ? void 0 : z.$el, {
      transition: `opacity ${w.DURATION}s cubic-bezier(${w.EASE.join(",")})`
    }), m > 2 && !j) {
      S ? l() : p(i.value[0]);
      return;
    }
    if (m > 2 && j && i && n.value) {
      p(i.value[n.value.length - 1]);
      return;
    }
    const X = (F = i.value) == null ? void 0 : F.reduce((L, B) => typeof L != "number" || typeof B != "number" ? L : Math.abs(B - y) < Math.abs(L - y) ? B : L), K = P(u.value) ? window.innerHeight : window.innerWidth;
    if (m > Pe && Math.abs(s) < K * 0.4) {
      const L = j ? 1 : -1;
      if (L > 0 && O) {
        p(i.value[(((d = n.value) == null ? void 0 : d.length) ?? 0) - 1]);
        return;
      }
      if (M && L < 0 && S && l(), c.value === null)
        return;
      p(i.value[c.value + L]);
      return;
    }
    p(X);
  }
  function U({ draggedDistance: s }) {
    var m;
    if (D.value === null)
      return;
    const l = u.value === "bottom" || u.value === "right" ? D.value - s : D.value + s;
    (u.value === "bottom" || u.value === "right") && l < i.value[i.value.length - 1] || (u.value === "top" || u.value === "left") && l > i.value[i.value.length - 1] || $((m = v.value) == null ? void 0 : m.$el, {
      transform: P(u.value) ? `translate3d(0, ${l}px, 0)` : `translate3d(${l}px, 0, 0)`
    });
  }
  function C(s, l) {
    if (!n.value || typeof c.value != "number" || !i.value || e.value === void 0)
      return null;
    const m = c.value === e.value - 1;
    if (c.value >= e.value && l)
      return 0;
    if (m && !l)
      return 1;
    if (!T.value && !m)
      return null;
    const y = m ? c.value + 1 : c.value - 1, x = m ? i.value[y] - i.value[y - 1] : i.value[y + 1] - i.value[y], M = s / Math.abs(x);
    return m ? 1 - M : M;
  }
  return {
    isLastSnapPoint: O,
    shouldFade: T,
    getPercentageDragged: C,
    activeSnapPointIndex: c,
    onRelease: o,
    onDrag: U,
    snapPointsOffset: i
  };
}
let Z = null;
function it(t) {
  const { isOpen: n, modal: v, nested: r, hasBeenOpened: e } = t, b = E(typeof window < "u" ? window.location.href : ""), u = E(0);
  function f() {
    if (Z === null && n.value) {
      Z = {
        position: document.body.style.position,
        top: document.body.style.top,
        left: document.body.style.left,
        height: document.body.style.height
      };
      const { scrollX: O, innerHeight: T } = window;
      document.body.style.position = "fixed", document.body.style.top = `-${u.value}px`, document.body.style.left = `-${O}px`, document.body.style.right = "0px", document.body.style.height = "auto", setTimeout(() => {
        requestAnimationFrame(() => {
          const c = T - window.innerHeight;
          c && u.value >= T && (document.body.style.top = `-${u.value + c}px`);
        });
      }, 300);
    }
  }
  function _() {
    if (Z !== null) {
      const O = -Number.parseInt(document.body.style.top, 10), T = -Number.parseInt(document.body.style.left, 10);
      Object.assign(document.body.style, Z), requestAnimationFrame(() => {
        if (b.value !== window.location.href) {
          b.value = window.location.href;
          return;
        }
        window.scrollTo(T, O);
      }), Z = null;
    }
  }
  return Te(() => {
    function O() {
      u.value = window.scrollY;
    }
    O(), window.addEventListener("scroll", O), Ee(() => {
      window.removeEventListener("scroll", O);
    });
  }), Y([n, e, b], () => {
    r.value || !e.value || (n.value ? (!window.matchMedia("(display-mode: standalone)").matches && f(), v.value || setTimeout(() => {
      _();
    }, 500)) : _());
  }), { restorePositionSetting: _ };
}
const rt = 0.25, ut = 100, De = 8, q = 16, st = 26, Se = "vaul-dragging";
function ct(t, n) {
  return t && t.value ? t : n;
}
function vt(t) {
  const {
    emitDrag: n,
    emitRelease: v,
    emitClose: r,
    emitOpenChange: e,
    open: b,
    dismissible: u,
    nested: f,
    fixed: _,
    modal: O,
    shouldScaleBackground: T,
    scrollLockTimeout: c,
    closeThreshold: i,
    activeSnapPoint: D,
    fadeFromIndex: p,
    direction: o
  } = t, U = E(b.value ?? !1), C = E(!1), s = E(!1), l = E(!1), m = E(!1), S = E(null), y = E(null), x = E(null), M = E(null), j = E(null), X = E(!0), K = E(null), z = E(0), F = E(!1);
  E(0);
  const d = E(null);
  E(0);
  const L = W(() => {
    var a;
    return ((a = d.value) == null ? void 0 : a.$el.getBoundingClientRect().height) || 0;
  }), B = ct(
    t.snapPoints,
    E(void 0)
  ), {
    activeSnapPointIndex: fe,
    onRelease: Ne,
    snapPointsOffset: Ae,
    onDrag: _e,
    shouldFade: pe,
    getPercentageDragged: Ce
  } = ot({
    snapPoints: B,
    activeSnapPoint: D,
    drawerRef: d,
    fadeFromIndex: p,
    overlayRef: S,
    onSnapPointChange: xe,
    direction: o
  });
  function xe(a, g) {
    B.value && a === g.length - 1 && (y.value = /* @__PURE__ */ new Date());
  }
  const { restorePositionSetting: Be } = it({
    isOpen: U,
    modal: O,
    nested: f,
    hasBeenOpened: C
  });
  function G() {
    return (window.innerWidth - st) / window.innerWidth;
  }
  function me(a, g) {
    var V;
    if (!a)
      return !1;
    let h = a;
    const N = (V = window.getSelection()) == null ? void 0 : V.toString(), R = d.value ? le(d.value.$el, o.value) : null, H = /* @__PURE__ */ new Date();
    if (h.hasAttribute("data-vaul-no-drag") || h.closest("[data-vaul-no-drag]"))
      return !1;
    if (o.value === "right" || o.value === "left")
      return !0;
    if (y.value && H.getTime() - y.value.getTime() < 500)
      return !1;
    if (R !== null && (o.value === "bottom" ? R > 0 : R < 0))
      return !0;
    if (N && N.length > 0)
      return !1;
    if (j.value && H.getTime() - j.value.getTime() < c.value && R === 0 || g)
      return j.value = H, !1;
    for (; h; ) {
      if (h.scrollHeight > h.clientHeight) {
        if (h.scrollTop !== 0)
          return j.value = /* @__PURE__ */ new Date(), !1;
        if (h.getAttribute("role") === "dialog")
          return !0;
      }
      h = h.parentNode;
    }
    return !0;
  }
  function He(a) {
    !u.value && !B.value || d.value && !d.value.$el.contains(a.target) || (l.value = !0, x.value = /* @__PURE__ */ new Date(), a.target.setPointerCapture(a.pointerId), z.value = P(o.value) ? a.clientY : a.clientX);
  }
  function Ue(a) {
    var g, h, N, R, H, V;
    if (d.value && l.value) {
      const J = o.value === "bottom" || o.value === "right" ? 1 : -1, ee = (z.value - (P(o.value) ? a.clientY : a.clientX)) * J, te = ee > 0, we = B.value && !u.value && !te;
      if (we && fe.value === 0)
        return;
      const se = Math.abs(ee), he = document.querySelector("[vaul-drawer-wrapper]");
      let I = se / L.value;
      const be = Ce(se, te);
      if (be !== null && (I = be), we && I >= 1 || !X.value && !me(a.target, te))
        return;
      if ((g = d == null ? void 0 : d.value) == null || g.$el.classList.add(Se), X.value = !0, $((h = d.value) == null ? void 0 : h.$el, {
        transition: "none"
      }), $((N = S.value) == null ? void 0 : N.$el, {
        transition: "none"
      }), B.value && _e({ draggedDistance: ee }), te && !B.value) {
        const k = lt(ee), ne = Math.min(k * -1, 0) * J;
        $((R = d.value) == null ? void 0 : R.$el, {
          transform: P(o.value) ? `translate3d(0, ${ne}px, 0)` : `translate3d(${ne}px, 0, 0)`
        });
        return;
      }
      const je = 1 - I;
      if ((pe.value || p.value && fe.value === p.value - 1) && (n(I), $(
        (H = S.value) == null ? void 0 : H.$el,
        {
          opacity: `${je}`,
          transition: "none"
        },
        !0
      )), he && S.value && T.value) {
        const k = Math.min(G() + I * (1 - G()), 1), ne = 8 - I * 8, ye = Math.max(0, 14 - I * 14);
        $(
          he,
          {
            borderRadius: `${ne}px`,
            transform: P(o.value) ? `scale(${k}) translate3d(0, ${ye}px, 0)` : `scale(${k}) translate3d(${ye}px, 0, 0)`,
            transition: "none"
          },
          !0
        );
      }
      if (!B.value) {
        const k = se * J;
        $((V = d.value) == null ? void 0 : V.$el, {
          transform: P(o.value) ? `translate3d(0, ${k}px, 0)` : `translate3d(${k}px, 0, 0)`
        });
      }
    }
  }
  function ge() {
    var h;
    if (!d.value)
      return;
    const a = document.querySelector("[vaul-drawer-wrapper]"), g = le(d.value.$el, o.value);
    $(d.value.$el, {
      transform: "translate3d(0, 0, 0)",
      transition: `transform ${w.DURATION}s cubic-bezier(${w.EASE.join(",")})`
    }), $((h = S.value) == null ? void 0 : h.$el, {
      transition: `opacity ${w.DURATION}s cubic-bezier(${w.EASE.join(",")})`,
      opacity: "1"
    }), T.value && g && g > 0 && U.value && $(
      a,
      {
        borderRadius: `${De}px`,
        overflow: "hidden",
        ...P(o.value) ? {
          transform: `scale(${G()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`,
          transformOrigin: "top"
        } : {
          transform: `scale(${G()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`,
          transformOrigin: "left"
        },
        transitionProperty: "transform, border-radius",
        transitionDuration: `${w.DURATION}s`,
        transitionTimingFunction: `cubic-bezier(${w.EASE.join(",")})`
      },
      !0
    );
  }
  function Q() {
    var a;
    d.value && (r(), $(d.value.$el, {
      transform: P(o.value) ? `translate3d(0, ${o.value === "bottom" ? "100%" : "-100%"}, 0)` : `translate3d(${o.value === "right" ? "100%" : "-100%"}, 0, 0)`,
      transition: `transform ${w.DURATION}s cubic-bezier(${w.EASE.join(",")})`
    }), $((a = S.value) == null ? void 0 : a.$el, {
      opacity: "0",
      transition: `opacity ${w.DURATION}s cubic-bezier(${w.EASE.join(",")})`
    }), ue(!1), window.setTimeout(() => {
      s.value = !1, U.value = !1;
    }, 300), window.setTimeout(() => {
      B.value && (D.value = B.value[0]);
    }, w.DURATION * 1e3));
  }
  ke(() => {
    if (!U.value && T.value && et) {
      const a = setTimeout(() => {
        ae(document.body);
      }, 200);
      return () => clearTimeout(a);
    }
  }), Ee(() => {
    ue(!1), Be();
  });
  function Me(a) {
    if (!l.value || !d.value)
      return;
    d.value.$el.classList.remove(Se), X.value = !1, l.value = !1, M.value = /* @__PURE__ */ new Date();
    const g = le(d.value.$el, o.value);
    if (!me(a.target, !1) || !g || Number.isNaN(g) || x.value === null)
      return;
    const h = M.value.getTime() - x.value.getTime(), N = z.value - (P(o.value) ? a.clientY : a.clientX), R = Math.abs(N) / h;
    if (R > 0.05 && (m.value = !0, window.setTimeout(() => {
      m.value = !1;
    }, 200)), B.value) {
      const V = o.value === "bottom" || o.value === "right" ? 1 : -1;
      Ne({
        draggedDistance: N * V,
        closeDrawer: Q,
        velocity: R,
        dismissible: u.value
      }), v(!0);
      return;
    }
    if (o.value === "bottom" || o.value === "right" ? N > 0 : N < 0) {
      ge(), v(!0);
      return;
    }
    if (R > Pe) {
      Q(), v(!1);
      return;
    }
    const H = Math.min(
      d.value.$el.getBoundingClientRect().height ?? 0,
      window.innerHeight
    );
    if (g >= H * i.value) {
      Q(), v(!1);
      return;
    }
    v(!0), ge();
  }
  Y(U, (a) => {
    a && (y.value = /* @__PURE__ */ new Date(), ue(!0)), e(a);
  }, { immediate: !0 }), Y(b, (a) => {
    a ? (U.value = a, C.value = !0) : Q();
  }, { immediate: !0 });
  function ue(a) {
    const g = document.querySelector("[vaul-drawer-wrapper]");
    !g || !T.value || (a ? ($(document.body, {
      background: document.body.style.backgroundColor || document.body.style.background
    }), $(
      document.body,
      {
        background: "black"
      },
      !0
    ), $(g, {
      borderRadius: `${De}px`,
      overflow: "hidden",
      ...P(o.value) ? {
        transform: `scale(${G()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`,
        transformOrigin: "top"
      } : {
        transform: `scale(${G()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`,
        transformOrigin: "left"
      },
      transitionProperty: "transform, border-radius",
      transitionDuration: `${w.DURATION}s`,
      transitionTimingFunction: `cubic-bezier(${w.EASE.join(",")})`
    })) : (ae(g, "overflow"), ae(g, "transform"), ae(g, "borderRadius"), $(g, {
      transitionProperty: "transform, border-radius",
      transitionDuration: `${w.DURATION}s`,
      transitionTimingFunction: `cubic-bezier(${w.EASE.join(",")})`
    })));
  }
  function Le(a) {
    var N, R;
    const g = a ? (window.innerWidth - q) / window.innerWidth : 1, h = a ? -q : 0;
    K.value && window.clearTimeout(K.value), $((N = d.value) == null ? void 0 : N.$el, {
      transition: `transform ${w.DURATION}s cubic-bezier(${w.EASE.join(",")})`,
      transform: `scale(${g}) translate3d(0, ${h}px, 0)`
    }), !a && ((R = d.value) != null && R.$el) && (K.value = window.setTimeout(() => {
      var V, J;
      const H = le((V = d.value) == null ? void 0 : V.$el, o.value);
      $((J = d.value) == null ? void 0 : J.$el, {
        transition: "none",
        transform: P(o.value) ? `translate3d(0, ${H}px, 0)` : `translate3d(${H}px, 0, 0)`
      });
    }, 500));
  }
  function Ve(a) {
    var H;
    if (a < 0)
      return;
    const g = P(o.value) ? window.innerHeight : window.innerWidth, h = (g - q) / g, N = h + a * (1 - h), R = -q + a * q;
    $((H = d.value) == null ? void 0 : H.$el, {
      transform: P(o.value) ? `scale(${N}) translate3d(0, ${R}px, 0)` : `scale(${N}) translate3d(${R}px, 0, 0)`,
      transition: "none"
    });
  }
  function We(a) {
    var R;
    const g = P(o.value) ? window.innerHeight : window.innerWidth, h = a ? (g - q) / g : 1, N = a ? -q : 0;
    a && $((R = d.value) == null ? void 0 : R.$el, {
      transition: `transform ${w.DURATION}s cubic-bezier(${w.EASE.join(",")})`,
      transform: P(o.value) ? `scale(${h}) translate3d(0, ${N}px, 0)` : `scale(${h}) translate3d(${N}px, 0, 0)`
    });
  }
  return {
    open: b,
    isOpen: U,
    modal: O,
    keyboardIsOpen: F,
    hasBeenOpened: C,
    isVisible: s,
    drawerRef: d,
    drawerHeightRef: L,
    overlayRef: S,
    isDragging: l,
    dragStartTime: x,
    isAllowedToDrag: X,
    snapPoints: B,
    activeSnapPoint: D,
    pointerStart: z,
    dismissible: u,
    snapPointsOffset: Ae,
    direction: o,
    shouldFade: pe,
    fadeFromIndex: p,
    shouldScaleBackground: T,
    onPress: He,
    onDrag: Ue,
    onRelease: Me,
    closeDrawer: Q,
    onNestedDrag: Ve,
    onNestedRelease: We,
    onNestedOpenChange: Le,
    emitClose: r,
    emitDrag: n,
    emitRelease: v,
    emitOpenChange: e,
    nested: f
  };
}
const dt = /* @__PURE__ */ oe({
  __name: "DrawerRoot",
  props: {
    activeSnapPoint: { default: void 0 },
    closeThreshold: { default: rt },
    shouldScaleBackground: { type: Boolean, default: void 0 },
    scrollLockTimeout: { default: ut },
    fixed: { type: Boolean, default: void 0 },
    dismissible: { type: Boolean, default: !0 },
    modal: { type: Boolean, default: !0 },
    open: { type: Boolean, default: void 0 },
    defaultOpen: { type: Boolean, default: void 0 },
    nested: { type: Boolean, default: !1 },
    direction: { default: "bottom" },
    snapPoints: { default: void 0 },
    fadeFromIndex: { default: void 0 }
  },
  emits: ["drag", "release", "close", "update:open", "update:activeSnapPoint", "animationEnd"],
  setup(t, { expose: n, emit: v }) {
    const r = t, e = v;
    qe();
    const b = W(() => r.fadeFromIndex ?? (r.snapPoints && r.snapPoints.length - 1)), u = $e(r, "open", e, {
      defaultValue: r.defaultOpen,
      passive: r.open === void 0
    }), f = $e(r, "activeSnapPoint", e, {
      passive: r.activeSnapPoint === void 0
    }), _ = {
      emitDrag: (p) => e("drag", p),
      emitRelease: (p) => e("release", p),
      emitClose: () => e("close"),
      emitOpenChange: (p) => {
        e("update:open", p), setTimeout(() => {
          e("animationEnd", p);
        }, w.DURATION * 1e3);
      }
    }, { closeDrawer: O, hasBeenOpened: T, modal: c, isOpen: i } = at(
      vt({
        ..._,
        ...Ye(r),
        activeSnapPoint: f,
        fadeFromIndex: b,
        open: u
      })
    );
    function D(p) {
      if (u.value !== void 0) {
        _.emitOpenChange(p);
        return;
      }
      p ? (T.value = !0, i.value = p) : O();
    }
    return n({
      open: i
    }), (p, o) => (ie(), re(A(Ke), {
      open: A(i),
      modal: A(c),
      "onUpdate:open": D
    }, {
      default: ce(() => [
        ve(p.$slots, "default", { open: A(i) })
      ]),
      _: 3
    }, 8, ["open", "modal"]));
  }
}), mt = /* @__PURE__ */ oe({
  __name: "DrawerRootNested",
  props: {
    activeSnapPoint: {},
    closeThreshold: {},
    shouldScaleBackground: { type: Boolean },
    scrollLockTimeout: {},
    fixed: { type: Boolean },
    dismissible: { type: Boolean },
    modal: { type: Boolean },
    open: { type: Boolean },
    defaultOpen: { type: Boolean },
    nested: { type: Boolean },
    direction: {},
    snapPoints: {},
    fadeFromIndex: {}
  },
  emits: ["drag", "release", "close", "update:open", "update:activeSnapPoint", "animationEnd"],
  setup(t, { emit: n }) {
    const v = t, r = n, { onNestedDrag: e, onNestedOpenChange: b, onNestedRelease: u } = de();
    function f() {
      b(!1);
    }
    function _(c) {
      e(c);
    }
    function O(c) {
      c && b(c), r("update:open", c);
    }
    const T = Qe(v, r);
    return (c, i) => (ie(), re(dt, Xe(A(T), {
      nested: "",
      onClose: f,
      onDrag: _,
      onRelease: A(u),
      "onUpdate:open": O
    }), {
      default: ce(() => [
        ve(c.$slots, "default")
      ]),
      _: 3
    }, 16, ["onRelease"]));
  }
}), gt = /* @__PURE__ */ oe({
  __name: "DrawerOverlay",
  setup(t) {
    const { overlayRef: n, snapPoints: v, isVisible: r, isOpen: e, shouldFade: b } = de(), u = W(() => {
      var f;
      return v && (((f = v.value) == null ? void 0 : f.length) ?? 0) > 0;
    });
    return (f, _) => (ie(), re(A(Ze), {
      ref_key: "overlayRef",
      ref: n,
      "vaul-drawer-visible": A(r) ? "true" : "false",
      "vaul-overlay": "",
      "vaul-snap-points": A(e) && u.value ? "true" : "false",
      "vaul-snap-points-overlay": A(e) && A(b) ? "true" : "false"
    }, null, 8, ["vaul-drawer-visible", "vaul-snap-points", "vaul-snap-points-overlay"]));
  }
}), wt = /* @__PURE__ */ oe({
  __name: "DrawerContent",
  setup(t) {
    const {
      open: n,
      isOpen: v,
      isVisible: r,
      snapPointsOffset: e,
      drawerRef: b,
      onPress: u,
      onDrag: f,
      onRelease: _,
      modal: O,
      emitOpenChange: T,
      dismissible: c,
      keyboardIsOpen: i,
      closeDrawer: D,
      direction: p
    } = de(), o = W(() => e.value && e.value.length > 0 ? `${e.value[0]}px` : "0");
    function U(C) {
      if (!O.value || C.defaultPrevented) {
        C.preventDefault();
        return;
      }
      i.value && (i.value = !1), C.preventDefault(), c.value && T(!1), !(!c.value || n.value !== void 0) && D();
    }
    return Y(
      v,
      (C) => {
        C && setTimeout(() => {
          r.value = !0;
        }, 1);
      },
      { immediate: !0 }
    ), (C, s) => (ie(), re(A(Fe), {
      ref_key: "drawerRef",
      ref: b,
      "vaul-drawer": "",
      "vaul-drawer-direction": A(p),
      "vaul-drawer-visible": A(r) ? "true" : "false",
      style: Ge({ "--snap-point-height": o.value }),
      onPointerdown: A(u),
      onPointermove: A(f),
      onPointerup: A(_),
      onPointerDownOutside: U,
      onEscapeKeyDown: s[0] || (s[0] = (l) => {
        A(c) || l.preventDefault();
      })
    }, {
      default: ce(() => [
        ve(C.$slots, "default")
      ]),
      _: 3
    }, 8, ["vaul-drawer-direction", "vaul-drawer-visible", "style", "onPointerdown", "onPointermove", "onPointerup"]));
  }
});
export {
  yt as DrawerClose,
  wt as DrawerContent,
  $t as DrawerDescription,
  gt as DrawerOverlay,
  Dt as DrawerPortal,
  dt as DrawerRoot,
  mt as DrawerRootNested,
  St as DrawerTitle,
  Ot as DrawerTrigger
};
